process MuonHits = 
{
	untracked PSet maxEvents = {untracked int32 input = 1000}

  include "Configuration/StandardSequences/data/SimulationRandomNumberGeneratorSeeds.cff"

  include "Configuration/StandardSequences/data/FakeConditions.cff"
  include "Configuration/StandardSequences/data/Geometry.cff"
  include "Configuration/StandardSequences/data/MagneticField.cff" 

    untracked PSet options = {
       include "FWCore/Framework/test/cmsExceptionsFatalOption.cff"
       untracked bool wantSummary = true
       untracked bool makeTriggerResults = true 
    }

  source = FlatRandomPtGunSource 
  { 
    string psethack  = "single mu pt 100 neg"	
    untracked uint32 firstRun  =  1
    untracked PSet PGunParameters =
    {
      untracked vint32  PartID = {13}
      untracked double MinEta = -2.5
      untracked double MaxEta =  2.5
      untracked double MinPhi = -3.14159265358979323846 # in radians
      untracked double MaxPhi =  3.14159265358979323846
      untracked double MinPt  =  99.99
      untracked double MaxPt  = 100.01
    }
    untracked int32 Verbosity = 0 # set to 1 (or greater)  for printouts
  }
  include "FWCore/MessageService/data/MessageLogger.cfi"
#   replace MessageLogger.cout.threshold = "ERROR"
#   untracked vstring destinations = { "cout" }
#   replace MessageLogger.destinations = "cout"  
#   untracked PSet cout = { untracked string threshold = "ERROR" }
    replace MessageLogger.cerr.default.limit = 10

include "Configuration/StandardSequences/data/Simulation.cff"
include "Configuration/StandardSequences/data/MixingNoPileUp.cff" 
include "Configuration/StandardSequences/data/VtxSmearedGauss.cff" 

 # SimHits Validation Analyzer after Simulation
  module vp = MuonSimHitsValidAnalyzer
  {
    untracked string Name = "MuonSimHitsValidAnalyzer"
    untracked int32 Verbosity = 0  # verbosity inclusive.
                                    # 0 provides no output
                                    # 1 provides basic output
                                    # 2 provides output of the fill step
                                    # 3 provides output of the store step   
    string Label = "Hits"
    PSet ProvenanceLookup =
    {
      untracked bool GetAllProvenances = false
      untracked bool PrintProvenanceInfo = false
    }
    InputTag CSCHitsSrc = g4SimHits:MuonCSCHits
    InputTag DTHitsSrc = g4SimHits:MuonDTHits
    InputTag RPCHitsSrc = g4SimHits:MuonRPCHits

  # Name of the root file which will contain the histos
    untracked string DT_outputFile = "DTSimHitsPlots_200pre4.root"   
    untracked string CSC_outputFile = "CSCSimHitsPlots_200pre4.root"
    untracked string RPC_outputFile = "RPCSimHitsPlots_200pre4.root"
}

#    service = DaqMonitorROOTBackEnd{ }

    include "DQMServices/Core/data/DQM.cfg"
    replace DQM.collectorHost = ""  

    path p1 = {psim, vp } # simulation + validation

   # Event output
include "Configuration/EventContent/data/EventContent.cff"
   module FEVT = PoolOutputModule 
   { 
     	using FEVTSIMEventContent
	untracked string fileName = "single_mu_pt_100_negative.root"
	untracked PSet datasets ={
	    untracked PSet dataset1 = {
		untracked string dataTier = "FEVT"
	    }
	    
	}
   }

}

